"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[9410],{1720:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=i(4848),n=i(8453);const r={id:"windows-getting-started",title:"Getting Started",slug:"/cppsdk/windows/getting-started/",sidebar_position:0,custom_edit_url:"https://github.com/modio/modio-sdk-internal/blob/develop/platform/win32/doc/getting-started.mdx"},d=void 0,s={id:"game-integration/cppsdk/win32/windows-getting-started",title:"Getting Started",description:"mod.io Windows SDK Integration",source:"@site/public/en-us/game-integration/cppsdk/win32/getting-started.mdx",sourceDirName:"game-integration/cppsdk/win32",slug:"/cppsdk/windows/getting-started/",permalink:"/cppsdk/windows/getting-started/",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-sdk-internal/blob/develop/platform/win32/doc/getting-started.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"windows-getting-started",title:"Getting Started",slug:"/cppsdk/windows/getting-started/",sidebar_position:0,custom_edit_url:"https://github.com/modio/modio-sdk-internal/blob/develop/platform/win32/doc/getting-started.mdx"},sidebar:"sidebar",previous:{title:"Multiplayer",permalink:"/cppsdk/multiplayer/"},next:{title:"CMake Integration",permalink:"/cppsdk/windows/cmake-integration/"}},a={},l=[{value:"mod.io Windows SDK Integration",id:"modio-windows-sdk-integration",level:2},{value:"Windows Terminal Compilation of x64 library",id:"windows-terminal-compilation-of-x64-library",level:2}];function c(t){const e={code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,n.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.h2,{id:"modio-windows-sdk-integration",children:"mod.io Windows SDK Integration"}),"\n",(0,o.jsxs)(e.p,{children:["The use of Windows with the mod.io SDK is ready by default. You can find the ",(0,o.jsx)(e.code,{children:"windows"})," directory in the platform subdirectory of your SDK installation.\nYou can then target ",(0,o.jsx)(e.code,{children:"WIN"})," to compile the mod.io SDK for Windows."]}),"\n",(0,o.jsx)(e.h2,{id:"windows-terminal-compilation-of-x64-library",children:"Windows Terminal Compilation of x64 library"}),"\n",(0,o.jsx)(e.p,{children:'When you compile the mod.io SDK and you require a x64 library in Windows, confirm the use of the "x64 Native Tools Command Prompt" for your Visual Studio version, which by default employs the x64 compiler. To verify the Static or Shared library was compiled with x64 architecture, you can use the "dumpbin" command:'}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"dumpbin out\\build\\win\\modio\\modioStatic.lib /headers\n"})}),"\n",(0,o.jsx)(e.p,{children:"Then search for the confirmation as follows:"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"Dump of file out\\build\\win\\modio\\modioStatic.lib\n\nFile Type: LIBRARY\n\nFILE HEADER VALUES\n            8664 machine (x64)\n             34A number of sections\n        63336D7D time date stamp Wed Sep 28 10:39:09 2022\n           136EC file pointer to symbol table\n             AC9 number of symbols\n               0 size of optional header\n               0 characteristics\n"})}),"\n",(0,o.jsx)(e.hr,{})]})}function m(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(c,{...t})}):c(t)}},8453:(t,e,i)=>{i.d(e,{R:()=>d,x:()=>s});var o=i(6540);const n={},r=o.createContext(n);function d(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:d(t.components),o.createElement(r.Provider,{value:e},t.children)}}}]);