"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[2284],{3179:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>c,frontMatter:()=>s,metadata:()=>d,toc:()=>l});var t=n(4848),o=n(8453);const s={id:"linux-getting-started",title:"Linux Setup",slug:"/cppsdk/linux/getting-started",sidebar_position:0,custom_edit_url:"https://github.com/modio/modio-sdk-internal/blob/develop/platform/linux/doc/getting-started.mdx"},a="Linux Setup",d={id:"game-integration/cppsdk/linux/linux-getting-started",title:"Linux Setup",description:"mod.io Linux SDK integration",source:"@site/public/en-us/game-integration/cppsdk/linux/getting-started.mdx",sourceDirName:"game-integration/cppsdk/linux",slug:"/cppsdk/linux/getting-started",permalink:"/cppsdk/linux/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-sdk-internal/blob/develop/platform/linux/doc/getting-started.mdx",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"linux-getting-started",title:"Linux Setup",slug:"/cppsdk/linux/getting-started",sidebar_position:0,custom_edit_url:"https://github.com/modio/modio-sdk-internal/blob/develop/platform/linux/doc/getting-started.mdx"},sidebar:"sidebar",previous:{title:"CMake Integration",permalink:"/cppsdk/windows/cmake-integration"},next:{title:"CMake Integration",permalink:"/cppsdk/linux/cmake-integration"}},r={},l=[{value:"mod.io Linux SDK integration",id:"modio-linux-sdk-integration",level:2},{value:"Linux SDK versions",id:"linux-sdk-versions",level:2},{value:"Dependencies",id:"dependencies",level:2}];function u(e){const i={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"linux-setup",children:"Linux Setup"}),"\n",(0,t.jsx)(i.h2,{id:"modio-linux-sdk-integration",children:"mod.io Linux SDK integration"}),"\n",(0,t.jsxs)(i.p,{children:["The use of Linux with the mod.io SDK is ready by default. You can find the ",(0,t.jsx)(i.code,{children:"linux"})," directory in the platform subdirectory of your SDK installation.\nYou can then target ",(0,t.jsx)(i.code,{children:"LINUX"})," to compile the mod.io SDK for Linux SDK."]}),"\n",(0,t.jsx)(i.admonition,{title:"Find your guide",type:"important",children:(0,t.jsxs)(i.p,{children:["This setup guide is intended for those building for Linux. If that's not you, check out our other ",(0,t.jsx)(i.a,{href:"/cppsdk/installation/#platform-installation-guides",children:"Platform Installation Guides"})," or continue to work through the ",(0,t.jsx)(i.a,{href:"/cppsdk/#getting-started",children:"C++ SDK Getting Started Guides"})," to implement mod.io's core functionality."]})}),"\n",(0,t.jsx)(i.h2,{id:"linux-sdk-versions",children:"Linux SDK versions"}),"\n",(0,t.jsx)(i.p,{children:"The mod.io SDK is built and tested against Ubuntu 21.04 using clang v10. Using different versions of the Linux SDK may result in compilation issues."}),"\n",(0,t.jsxs)(i.p,{children:["In Linux, the default way to compile the mod.io SDK requires CMake with Ninja as generator, which you can install CMake Installation instructions or using a package manager like ",(0,t.jsx)(i.code,{children:"apt"}),":"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-cmake",children:"sudo apt install cmake ninja\n"})}),"\n",(0,t.jsx)(i.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,t.jsx)(i.p,{children:'The mod.io SDK requires a Linux kernel with liburing support (v5.1 or later). The io_uring system calls provides asynchronous input/output operations. To fulfill that requirement and have the development tools ready, the following commands employ the "apt" package manager (tested on Ubuntu 20.04 Focal Fossa):'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"sudo apt update\nsudo apt upgrade\nsudo apt install llvm clang lldb make wget python3 ninja-build git unzip\n## Install Cmake\nwget -q -O cmake-linux.sh https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-Linux-x86_64.sh\nsh cmake-linux.sh -- --skip-license --prefix=/usr/\n## Install liburing-dev\nwget http://mirrors.kernel.org/ubuntu/pool/main/libu/liburing/liburing-dev_0.7-3ubuntu3_amd64.deb\nwget http://mirrors.kernel.org/ubuntu/pool/main/libu/liburing/liburing1_0.7-3ubuntu3_amd64.deb\nsudo apt install ./liburing*deb\n"})}),"\n",(0,t.jsxs)(i.p,{children:["The mod.io SDK also requires libuuid, which is available in the standard ",(0,t.jsx)(i.code,{children:"uuid-dev"})," package, e.g."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"sudo apt install uuid-dev\n"})}),"\n",(0,t.jsx)(i.admonition,{type:"note",children:(0,t.jsx)(i.p,{children:'If you are using the "header_only" release mode, the mod.io SDK includes MbedTLS headers, but requires the library installed in your system, which was tested with libmbedtls-dev 2.28.0 in Ubuntu. The "static" mode includes these libraries in the same folder as the libmodioStatic.a'})})]})}function c(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>d});var t=n(6540);const o={},s=t.createContext(o);function a(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);