"use strict";(self.webpackChunkmodio_docs=self.webpackChunkmodio_docs||[]).push([[4721],{3334:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var n=o(4848),s=o(8453);const d={id:"cpp-temporary-mods",title:"Temporary Mod Sets",slug:"/cppsdk/temporary-mods"},i="Temporary Mod Sets for C++ SDK",r={id:"game-integration/cppsdk/feature-guides/cpp-temporary-mods",title:"Temporary Mod Sets",description:"There are situations where you may want UGC to exist on a temporary basis. For instance, in Multiplayer environments you may want users to see another player's UGC even if they don't own it.",source:"@site/public/en-us/game-integration/cppsdk/feature-guides/cpp-temp-mod-sets.mdx",sourceDirName:"game-integration/cppsdk/feature-guides",slug:"/cppsdk/temporary-mods",permalink:"/cppsdk/temporary-mods",draft:!1,unlisted:!1,editUrl:"https://github.com/modio/modio-docs/tree/main/public/en-us/game-integration/cppsdk/feature-guides/cpp-temp-mod-sets.mdx",tags:[],version:"current",frontMatter:{id:"cpp-temporary-mods",title:"Temporary Mod Sets",slug:"/cppsdk/temporary-mods"},sidebar:"sidebar",previous:{title:"Metrics",permalink:"/cppsdk/metrics"},next:{title:"C++ SDK Reference",permalink:"/cppsdk/refdocs"}},a={},l=[{value:"How it works",id:"how-it-works",level:2},{value:"Installation",id:"installation",level:2}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"temporary-mod-sets-for-c-sdk",children:"Temporary Mod Sets for C++ SDK"}),"\n",(0,n.jsxs)(t.p,{children:["There are situations where you may want UGC to exist on a temporary basis. For instance, in ",(0,n.jsx)(t.a,{href:"https://docs.mod.io/multiplayer/",children:"Multiplayer"})," environments you may want users to see another player's UGC even if they don't own it."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://docs.mod.io/multiplayer/temporary-mods",children:"Temporary Mod Sets"})," allow management of these more transient pieces of content separately from subscriptions. Temporary Mod Sets do not require authentication to be used, however Mod Management must still be enabled to use temporary mods."]}),"\n",(0,n.jsx)(t.p,{children:"This guide covers:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#how-it-works",children:"How it works"})}),"\n",(0,n.jsx)(t.li,{children:(0,n.jsx)(t.a,{href:"#installation",children:"Installation"})}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,n.jsxs)(t.p,{children:["Temporary mods are downloaded in a folder separately from subscriptions, and are not updated or handled when you call ",(0,n.jsx)(t.code,{children:"FetchExternalUpdatesAsync"}),". That means you can prioritize the download and installation of temporary mods outside of the regular subscription flow."]}),"\n",(0,n.jsxs)(t.p,{children:["To use Temporary Mod Sets, you can start a TempModSet by calling ",(0,n.jsx)(t.code,{children:"InitTempModSet"})," and passing a list of Mod IDs to be downloaded and extracted. At anytime while a TempModSet is open, you can call ",(0,n.jsx)(t.a,{href:"/cppsdk/refdocs/#addtotempmodset",children:(0,n.jsx)(t.code,{children:"AddToTempModSet"})})," to add mods to the set (which will be instantly downloaded and extracted)."]}),"\n",(0,n.jsxs)(t.p,{children:["If you no longer need a mod, you can call ",(0,n.jsx)(t.a,{href:"/cppsdk/refdocs/#removefromtempmodset",children:(0,n.jsx)(t.code,{children:"RemoveFromTempModSet"})})," which will remove the file."]}),"\n",(0,n.jsxs)(t.p,{children:["Once you have finished with a TempModSet, you can call ",(0,n.jsx)(t.a,{href:"/cppsdk/refdocs/#closetempmodset",children:(0,n.jsx)(t.code,{children:"CloseTempModSet"})})," which will delete all temporary mods. Temporary mods are also deleted the next time you re-initialize the SDK."]}),"\n",(0,n.jsxs)(t.p,{children:["Like regular UGC, Temp Mods can be queried using ",(0,n.jsx)(t.a,{href:"/cppsdk/refdocs/#querytempmodset",children:(0,n.jsx)(t.code,{children:"QueryTempModSet"})})," to get a ModCollectionEntry with an installation path."]}),"\n",(0,n.jsx)(t.h2,{id:"installation",children:"Installation"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-cpp",children:'Modio::EnableModManagement([](Modio::ModManagementEvent ModEvent)\n{\n    if (ModEvent.Status && ModEvent.Event == Modio::ModManagementEvent::EventType::Installed)\n    {\n        std::cout << "Mod with ID: " << ModEvent.ID << " is installed" << std::endl;\n    }\n    else \n    {\n        std::cout << "Mod with ID: " << ModEvent.ID << " failed to install: " << ModEvent.Status.message() << std::endl;\n    }\n});\n\nstd::vector<Modio::ModID> ModIds = {8, 4, 5};\n\nModio::InitTempModSet(ModIds);\n\nwhile(Modio::IsModManagementBusy())\n{\n    Modio::RunPendingHandlers();\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"This call will start a TempModSet and install Mods with IDs 8, 4 and 5."}),"\n",(0,n.jsxs)(t.admonition,{type:"note",children:[(0,n.jsx)(t.mdxAdmonitionTitle,{}),(0,n.jsx)(t.p,{children:"If you add an already subscribed mod to TempModSet, it will not download be downloaded as the player will already have that content. If you try to unsubscribe from it while it's in TempModSet, the SDK it will wait for it to be removed from TempModSet before processing the unsubscribe."})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,t,o)=>{o.d(t,{R:()=>i,x:()=>r});var n=o(6540);const s={},d=n.createContext(s);function i(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);